Index: target/PaymentSystem/WEB-INF/jsp/ErrorPage.jsp
===================================================================
diff --git a/target/PaymentSystem/WEB-INF/jsp/ErrorPage.jsp b/target/PaymentSystem/WEB-INF/jsp/ErrorPage.jsp
deleted file mode 100644
--- a/target/PaymentSystem/WEB-INF/jsp/ErrorPage.jsp	
+++ /dev/null	
@@ -1,29 +0,0 @@
-<%@ page  language="java" contentType="text/html; charset=ISO-8859-1"
-         pageEncoding="ISO-8859-1"%>
-
-<html>
-<head>
-    <meta charset="ISO-8859-1">
-    <title>Error</title>
-</head>
-<body>
-
-
-<%
-
-    String regInf = (String) request.getAttribute("registrationInf");
-
-    if(regInf != null){
-%>
-<h2>
-<%
-        out.println(regInf);
-    }
-%>
-</h2>
-
-
-<h1>!!!!!!!!!!!!!!</h1>
-
-</body>
-</html>
Index: target/PaymentSystem/WEB-INF/jsp/signUpPage.jsp
===================================================================
diff --git a/target/PaymentSystem/WEB-INF/jsp/signUpPage.jsp b/target/PaymentSystem/WEB-INF/jsp/signUpPage.jsp
deleted file mode 100644
--- a/target/PaymentSystem/WEB-INF/jsp/signUpPage.jsp	
+++ /dev/null	
@@ -1,36 +0,0 @@
-<%@ page language="java" contentType="text/html; charset=utf-8"
-         pageEncoding="utf-8" isELIgnored="false"%>
-<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
-<%@ taglib uri="http://java.sun.com/jsp/jstl/fmt" prefix="fmt"%>
-<%@ page import="com.mahhis.controller.constants.*"%>
-<!DOCTYPE html>
-<html>
-<head>
-    <title>Sign Up</title>
-
-
-</head>
-<body>
-
-<div class="container">
-
-    <form action="Controller" method ="post">
-
-        <input type="hidden" name="command" value="SignUp">
-        Email
-        <input type="text" name="email" value=""/>
-        <br/>
-        Login
-        <input type="text" name="login" value=""/>
-        <br/>
-        Password
-        <input type="password" name="password" value="" />
-        <br/>
-        <input type="submit" value="Press me" />
-    </form>
-
-</div>
-
-
-</body>
-</html>
\ No newline at end of file
Index: target/maven-archiver/pom.properties
===================================================================
diff --git a/target/maven-archiver/pom.properties b/target/maven-archiver/pom.properties
deleted file mode 100644
--- a/target/maven-archiver/pom.properties	
+++ /dev/null	
@@ -1,3 +0,0 @@
-artifactId=PaymentSystem
-groupId=com.mahhis
-version=1.0-SNAPSHOT
Index: target/PaymentSystem/index.jsp
===================================================================
diff --git a/target/PaymentSystem/index.jsp b/target/PaymentSystem/index.jsp
deleted file mode 100644
--- a/target/PaymentSystem/index.jsp	
+++ /dev/null	
@@ -1,7 +0,0 @@
-
-<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
-<%@ page contentType="text/html; charset=UTF-8" pageEncoding="UTF-8" %>
-
-<!DOCTYPE html>
-
-<c:redirect url="Controller?command=GoToSignInPage"/>
\ No newline at end of file
Index: target/PaymentSystem/WEB-INF/web.xml
===================================================================
diff --git a/target/PaymentSystem/WEB-INF/web.xml b/target/PaymentSystem/WEB-INF/web.xml
deleted file mode 100644
--- a/target/PaymentSystem/WEB-INF/web.xml	
+++ /dev/null	
@@ -1,29 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
-         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
-         version="4.0">
-
-    <display-name>task-4-payment-system</display-name>
-
-    <welcome-file-list>
-        <welcome-file>index.html</welcome-file>
-        <welcome-file>index.jsp</welcome-file>
-        <welcome-file>index.htm</welcome-file>
-        <welcome-file>default.html</welcome-file>
-        <welcome-file>default.jsp</welcome-file>
-        <welcome-file>default.htm</welcome-file>
-    </welcome-file-list>
-
-    <servlet>
-        <servlet-name>Controller</servlet-name>
-        <servlet-class>com.mahhis.controller.Controller</servlet-class>
-    </servlet>
-
-    <servlet-mapping>
-        <servlet-name>Controller</servlet-name>
-        <url-pattern>/Controller</url-pattern>
-    </servlet-mapping>
-
-
-</web-app>
\ No newline at end of file
Index: target/PaymentSystem/WEB-INF/jsp/completedTransactionsPage.jsp
===================================================================
diff --git a/target/PaymentSystem/WEB-INF/jsp/completedTransactionsPage.jsp b/target/PaymentSystem/WEB-INF/jsp/completedTransactionsPage.jsp
deleted file mode 100644
--- a/target/PaymentSystem/WEB-INF/jsp/completedTransactionsPage.jsp	
+++ /dev/null	
@@ -1,26 +0,0 @@
-<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
-<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
-<%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt" %>
-<%@ taglib prefix="fn" uri="http://java.sun.com/jsp/jstl/functions" %>
-<head>
-    <title>Title</title>
-    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
-    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
-</head>
-<body>
-
-<h1>Your Orders</h1>
-
-<table border="1px">
-
-    <c:forEach var="order" items="${sessionScope.orders}">
-        <tr>
-            <td><c:out value="${order.complete}"/></td>
-            <td><c:out value="${order.bankNameGetter}"/></td>
-            <td><c:out value="${order.cardNumberGetter}"/></td>
-            <td><c:out value="${order.getterCountry}"/></td>
-            <td><c:out value="${order.sumToComplete}"/></td>
-        </tr>
-    </c:forEach>
-</table>
-</body>
\ No newline at end of file
Index: target/PaymentSystem/WEB-INF/classes/db.properties
===================================================================
diff --git a/target/PaymentSystem/WEB-INF/classes/db.properties b/target/PaymentSystem/WEB-INF/classes/db.properties
deleted file mode 100644
--- a/target/PaymentSystem/WEB-INF/classes/db.properties	
+++ /dev/null	
@@ -1,5 +0,0 @@
-db.driver = com.mysql.cj.jdbc.Driver
-db.url = jdbc:mysql://localhost:3306/paymentsystem
-db.user = root
-db.password = 123456
-db.poolsize = 10;
\ No newline at end of file
Index: target/PaymentSystem/WEB-INF/jsp/signInPage.jsp
===================================================================
diff --git a/target/PaymentSystem/WEB-INF/jsp/signInPage.jsp b/target/PaymentSystem/WEB-INF/jsp/signInPage.jsp
deleted file mode 100644
--- a/target/PaymentSystem/WEB-INF/jsp/signInPage.jsp	
+++ /dev/null	
@@ -1,34 +0,0 @@
-<%@ page language="java" contentType="text/html; charset=utf-8"
-         pageEncoding="utf-8" isELIgnored="false" %>
-<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
-<%@ taglib uri="http://java.sun.com/jsp/jstl/fmt" prefix="fmt" %>
-<!DOCTYPE html>
-<html>
-<head>
-    <title>Sign In</title>
-
-
-</head>
-<body>
-
-<div class="container">
-
-
-    <form action="Controller" method="post">
-
-        <input type="hidden" name="command" value="SignIn">
-        Login
-        <input type="text" name="login" value=""/>
-        <br/>
-        Password
-        <input type="password" name="password" value=""/>
-        <br/>
-        <input type="submit" value="Press me"/>
-    </form>
-    <br/>
-    <a href="Controller?command=GoToSignUpPage">Reg</a>
-
-</div>
-
-</body>
-</html>
\ No newline at end of file
Index: target/PaymentSystem/WEB-INF/jsp/mainPage.jsp
===================================================================
diff --git a/target/PaymentSystem/WEB-INF/jsp/mainPage.jsp b/target/PaymentSystem/WEB-INF/jsp/mainPage.jsp
deleted file mode 100644
--- a/target/PaymentSystem/WEB-INF/jsp/mainPage.jsp	
+++ /dev/null	
@@ -1,99 +0,0 @@
-<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
-<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
-<%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt" %>
-<%@ taglib prefix="fn" uri="http://java.sun.com/jsp/jstl/functions" %>
-<head>
-    <title>Title</title>
-    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
-    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
-</head>
-<body>
-
-<h1>Your Cards</h1>
-<%--
-<table border="1px">
-
-    <c:forEach var="card" items="${sessionScope.cards}">
-        <tr>
-            <td><c:out value="${card.cardNumber}"/></td>
-            <td><c:out value="${card.cardValidityDate}"/></td>
-            <td><c:out value="${card.bankName}"/></td>
-            <td><c:out value="${card.countryName}"/></td>
-        </tr>
-    </c:forEach>
-</table>
-
-
-<div class="container">
-    <p>Add card</p>
-
-    <form action="Controller" method ="post">
-
-        <input type="hidden" name="command" value="AddCard">
-        Card Number
-        <input name="numberCard" type="tel" inputmode="number" pattern="[0-9\s]{13,19}" autocomplete="cc-number" maxlength="19" placeholder="xxxx xxxx xxxx xxxx"><br><br>
-        Card Validity Date
-        <input type="date" name="cardValidityDate" placeholder="Enter date card sender" class="form-control"><br>
-        CVV
-        <input type="number" name="CVV" placeholder="Enter cvv number card sender" class="form-control" pattern="^[0-9]{3, 4}$"><br>
-        <br/>
-        <input type="submit" value="Press me" />
-    </form>
-
-</div>--%>
-
-<form action="Controller" method ="post">
-
-    <input type="hidden" name="command" value="Transaction"><br>
-
-
-    Sender Card Number
-    <input name="numberCardSender" type="tel" inputmode="number"  maxlength="19" placeholder="xxxx xxxx xxxx xxxx"><br><br>
-
-    <input type="date" name="cardValidityDate" placeholder="Enter date card sender" class="form-control"><br>
-
-    <input type="number" name="CVV" placeholder="Enter cvv number card sender" class="form-control" pattern="^[0-9]{3, 4}$"><br>
-
-    <input type="number" name="sum" placeholder="Enter sum" class="form-control"><br>
-
-    <select name="bankNameSender">
-        <option name="bankNameSender" value="AlfaBank">AlfaBank</option>
-        <option name="bankNameSender" value="SberBank" selected>SberBank</option>
-        <option name="bankNameSender" value="VTB">VTB</option>
-        <option name="bankNameSender" value="JPMorgan">JPMorgan</option>
-        <option name="bankNameSender" value="CityGroupBank" >CityGroupBank</option>
-        <option name="bankNameSender" value="BankOfAmerica">BankOfAmerica</option>
-    </select><br><br>
-
-    <select name="senderCountry">
-        <option name="senderCountry" value="Belarus" selected>Belarus</option>
-        <option name="senderCountry" value="USA">USA</option>
-    </select><br><br>
-
-
-    Getter Card Number
-    <input name="numberCardGetter" type="tel" inputmode="number"  autocomplete="cc-number" maxlength="19" placeholder="xxxx xxxx xxxx xxxx"><br><br>
-
-    <select name="bankNameGetter">
-        <option name="bankNameGetter" value="AlfaBank">AlfaBank</option>
-        <option name="bankNameGetter" value="SberBank" selected>SberBank</option>
-        <option name="bankNameGetter" value="VTB">VTB</option>
-        <option name="bankNameGetter" value="JPMorgan">JPMorgan</option>
-        <option name="bankNameGetter" value="CityGroupBank" >CityGroupBank</option>
-        <option name="bankNameGetter" value="BankOfAmerica">BankOfAmerica</option>
-    </select><br><br>
-
-    <select name="getterCountry">
-        <option name="getterCountry" value="Belarus" selected>Belarus</option>
-        <option name="getterCountry" value="USA">USA</option>
-    </select><br><br>
-
-
-    <input type="submit" value="Press me" />
-</form>
-
-<a href="Controller?command=GoToTransactionListPage">My orders</a>
-
-
-</body>
-</html>
Index: src/main/java/com/mahhis/dao/database/ConnectionPool.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.mahhis.dao.database;\r\n\r\nimport java.sql.Array;\r\nimport java.sql.Blob;\r\nimport java.sql.CallableStatement;\r\nimport java.sql.Clob;\r\nimport java.sql.Connection;\r\nimport java.sql.DatabaseMetaData;\r\nimport java.sql.DriverManager;\r\nimport java.sql.NClob;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLClientInfoException;\r\nimport java.sql.SQLException;\r\nimport java.sql.SQLWarning;\r\nimport java.sql.SQLXML;\r\nimport java.sql.Savepoint;\r\nimport java.sql.Statement;\r\nimport java.sql.Struct;\r\nimport java.util.Map;\r\nimport java.util.Properties;\r\nimport java.util.concurrent.ArrayBlockingQueue;\r\nimport java.util.concurrent.BlockingQueue;\r\nimport java.util.concurrent.Executor;\r\n\r\npublic final class ConnectionPool {\r\n    private static ConnectionPool instance;\r\n\r\n    private BlockingQueue<Connection> connectionQueue;\r\n    private BlockingQueue<Connection> givenAwayConQueue;\r\n\r\n    private final String driverName;\r\n    private final String url;\r\n    private final String user;\r\n    private final String password;\r\n    private int poolSize;\r\n\r\n    private ConnectionPool() {\r\n        DBResourceManager dbResourceManager = DBResourceManager.getInstance();\r\n        this.driverName = dbResourceManager.getValue(DBParameter.DB_DRIVER);\r\n        this.url = dbResourceManager.getValue(DBParameter.DB_URL);\r\n        this.user = dbResourceManager.getValue(DBParameter.DB_USER);\r\n        this.password = dbResourceManager.getValue(DBParameter.DB_PASSWORD);\r\n        try {\r\n            this.poolSize = Integer.parseInt(dbResourceManager.getValue(DBParameter.DB_POOL_SIZE));\r\n        } catch (NumberFormatException e) {\r\n            poolSize = 5;\r\n        }\r\n    }\r\n\r\n    public static ConnectionPool getInstance() {\r\n        if (instance == null) {\r\n            instance = new ConnectionPool();\r\n            try {\r\n                instance.initPoolData();\r\n            } catch (ConnectionPoolException e) {\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n        return instance;\r\n    }\r\n\r\n    public void initPoolData() throws ConnectionPoolException {\r\n        try {\r\n            Class.forName(driverName);\r\n            givenAwayConQueue = new ArrayBlockingQueue<>(poolSize);\r\n            connectionQueue = new ArrayBlockingQueue<>(poolSize);\r\n            for (int i = 0; i < poolSize; i++) {\r\n                Connection connection = DriverManager.getConnection(url, user, password);\r\n                PooledConnection pooledConnection = new PooledConnection(connection);\r\n                connectionQueue.add(pooledConnection);\r\n            }\r\n        } catch (SQLException e) {\r\n            throw new ConnectionPoolException(\"SQLException in ConnectionPool1\", e);\r\n        } catch (ClassNotFoundException e) {\r\n            throw new ConnectionPoolException(\"Can't find database driver class\", e);\r\n        }\r\n    }\r\n\r\n    public void dispose() {\r\n        clearConnectionQueue();\r\n    }\r\n\r\n    private void clearConnectionQueue() {\r\n        try {\r\n            closeConnectionsQueue(givenAwayConQueue);\r\n            closeConnectionsQueue(connectionQueue);\r\n        } catch (SQLException e) {\r\n        }\r\n    }\r\n\r\n    public Connection takeConnection() throws ConnectionPoolException {\r\n        Connection connection = null;\r\n        try {\r\n            connection = connectionQueue.take();\r\n            givenAwayConQueue.add(connection);\r\n        } catch (InterruptedException e) {\r\n            throw new ConnectionPoolException(\"Error connecting to the data source.\", e);\r\n        }\r\n        return connection;\r\n    }\r\n\r\n    public void closeConnection(Connection con, Statement st, ResultSet rs) throws ConnectionPoolException {\r\n        try {\r\n            rs.close();\r\n        } catch (SQLException e) {\r\n            throw new ConnectionPoolException(\"rs didn't close \", e);\r\n\r\n        }\r\n        try {\r\n            st.close();\r\n        } catch (SQLException e) {\r\n            throw new ConnectionPoolException(\"st didn't close \", e);\r\n\r\n        }\r\n        try {\r\n            con.close();\r\n        } catch (SQLException e) {\r\n            throw new ConnectionPoolException(\"con didn't close \", e);\r\n        }\r\n    }\r\n\r\n    public void closeConnection(Connection con, Statement st) throws ConnectionPoolException {\r\n        try {\r\n            st.close();\r\n        } catch (SQLException e) {\r\n            throw new ConnectionPoolException(\"st didn't close \", e);\r\n        }\r\n        try {\r\n            con.close();\r\n        } catch (SQLException e) {\r\n            throw new ConnectionPoolException(\"con didn't close \", e);\r\n\r\n        }\r\n    }\r\n\r\n    private void closeConnectionsQueue(BlockingQueue<Connection> queue) throws SQLException {\r\n        Connection connection;\r\n        while ((connection = queue.poll()) != null) {\r\n            if (!connection.getAutoCommit()) {\r\n                connection.commit();\r\n            }\r\n            ((PooledConnection) connection).reallyClose();\r\n        }\r\n    }\r\n\r\n    private class PooledConnection implements Connection {\r\n        private final Connection connection;\r\n\r\n        public PooledConnection(Connection c) throws SQLException {\r\n            this.connection = c;\r\n            this.connection.setAutoCommit(true);\r\n        }\r\n\r\n        public void reallyClose() throws SQLException {\r\n            connection.close();\r\n        }\r\n\r\n        @Override\r\n        public void clearWarnings() throws SQLException {\r\n            connection.clearWarnings();\r\n        }\r\n\r\n        @Override\r\n        public void close() throws SQLException {\r\n            if (connection.isClosed()) {\r\n                throw new SQLException(\"Attempting to close closed connection.\");\r\n            }\r\n            if (connection.isReadOnly()) {\r\n                connection.setReadOnly(false);\r\n            }\r\n            if (!givenAwayConQueue.remove(this)) {\r\n                throw new SQLException(\"Error deleting connection from the given away connections pool.\");\r\n            }\r\n            if (!connectionQueue.offer(this)) {\r\n                throw new SQLException(\"Error allocating connection in the pool.\");\r\n            }\r\n        }\r\n\r\n        @Override\r\n        public void commit() throws SQLException {\r\n            connection.commit();\r\n        }\r\n\r\n        @Override\r\n        public Array createArrayOf(String typeName, Object[] elements) throws SQLException {\r\n            return connection.createArrayOf(typeName, elements);\r\n        }\r\n\r\n        @Override\r\n        public Blob createBlob() throws SQLException {\r\n            return connection.createBlob();\r\n        }\r\n\r\n        @Override\r\n        public Clob createClob() throws SQLException {\r\n            return connection.createClob();\r\n        }\r\n\r\n        @Override\r\n        public NClob createNClob() throws SQLException {\r\n            return connection.createNClob();\r\n        }\r\n\r\n        @Override\r\n        public SQLXML createSQLXML() throws SQLException {\r\n            return connection.createSQLXML();\r\n        }\r\n\r\n        @Override\r\n        public Statement createStatement() throws SQLException {\r\n            return connection.createStatement();\r\n        }\r\n\r\n        @Override\r\n        public Statement createStatement(int resultSetType, int resultSetConcurrency) throws SQLException {\r\n            return connection.createStatement(resultSetType, resultSetConcurrency);\r\n        }\r\n\r\n        @Override\r\n        public Statement createStatement(int resultSetType, int resultSetConcurrency, int resultSetHoldability) throws SQLException {\r\n            return connection.createStatement(resultSetType, resultSetConcurrency, resultSetHoldability);\r\n        }\r\n\r\n        @Override\r\n        public Struct createStruct(String typeName, Object[] attributes) throws SQLException {\r\n            return connection.createStruct(typeName, attributes);\r\n        }\r\n\r\n        @Override\r\n        public boolean getAutoCommit() throws SQLException {\r\n            return connection.getAutoCommit();\r\n        }\r\n\r\n        @Override\r\n        public String getCatalog() throws SQLException {\r\n            return connection.getCatalog();\r\n        }\r\n\r\n        @Override\r\n        public Properties getClientInfo() throws SQLException {\r\n            return connection.getClientInfo();\r\n        }\r\n\r\n        @Override\r\n        public String getClientInfo(String name) throws SQLException {\r\n            return connection.getClientInfo(name);\r\n        }\r\n\r\n        @Override\r\n        public int getHoldability() throws SQLException {\r\n            return connection.getHoldability();\r\n        }\r\n\r\n        @Override\r\n        public DatabaseMetaData getMetaData() throws SQLException {\r\n            return connection.getMetaData();\r\n        }\r\n\r\n        @Override\r\n        public int getTransactionIsolation() throws SQLException {\r\n            return connection.getTransactionIsolation();\r\n        }\r\n\r\n        @Override\r\n        public Map<String, Class<?>> getTypeMap() throws SQLException {\r\n            return connection.getTypeMap();\r\n        }\r\n\r\n        @Override\r\n        public SQLWarning getWarnings() throws SQLException {\r\n            return connection.getWarnings();\r\n        }\r\n\r\n        @Override\r\n        public boolean isClosed() throws SQLException {\r\n            return connection.isClosed();\r\n        }\r\n\r\n        @Override\r\n        public boolean isReadOnly() throws SQLException {\r\n            return connection.isReadOnly();\r\n        }\r\n\r\n        @Override\r\n        public boolean isValid(int timeout) throws SQLException {\r\n            return connection.isValid(timeout);\r\n        }\r\n\r\n        @Override\r\n        public String nativeSQL(String sql) throws SQLException {\r\n            return connection.nativeSQL(sql);\r\n        }\r\n\r\n        @Override\r\n        public CallableStatement prepareCall(String sql) throws SQLException {\r\n            return connection.prepareCall(sql);\r\n        }\r\n\r\n        @Override\r\n        public CallableStatement prepareCall(String sql, int resultSetType, int resultSetConcurrency) throws SQLException {\r\n            return connection.prepareCall(sql, resultSetType, resultSetConcurrency);\r\n        }\r\n\r\n        @Override\r\n        public CallableStatement prepareCall(String sql, int resultSetType, int resultSetConcurrency, int resultSetHoldability) throws SQLException {\r\n            return connection.prepareCall(sql, resultSetType, resultSetConcurrency, resultSetHoldability);\r\n        }\r\n\r\n        @Override\r\n        public PreparedStatement prepareStatement(String sql) throws SQLException {\r\n            return connection.prepareStatement(sql);\r\n        }\r\n\r\n        @Override\r\n        public PreparedStatement prepareStatement(String sql, int autoGeneratedKeys) throws SQLException {\r\n            return connection.prepareStatement(sql, autoGeneratedKeys);\r\n        }\r\n\r\n        @Override\r\n        public PreparedStatement prepareStatement(String sql, int[] columnIndexes) throws SQLException {\r\n            return connection.prepareStatement(sql, columnIndexes);\r\n        }\r\n\r\n        @Override\r\n        public PreparedStatement prepareStatement(String sql, String[] columnNames) throws SQLException {\r\n            return connection.prepareStatement(sql, columnNames);\r\n        }\r\n\r\n        @Override\r\n        public PreparedStatement prepareStatement(String sql, int resultSetType, int resultSetConcurrency) throws SQLException {\r\n            return connection.prepareStatement(sql, resultSetType, resultSetConcurrency);\r\n        }\r\n\r\n        @Override\r\n        public PreparedStatement prepareStatement(String sql, int resultSetType, int resultSetConcurrency, int resultSetHoldability) throws SQLException {\r\n            return connection.prepareStatement(sql, resultSetType, resultSetConcurrency, resultSetHoldability);\r\n        }\r\n\r\n        @Override\r\n        public void rollback() throws SQLException {\r\n            connection.rollback();\r\n        }\r\n\r\n        @Override\r\n        public void setAutoCommit(boolean autoCommit) throws SQLException {\r\n            connection.setAutoCommit(autoCommit);\r\n        }\r\n\r\n        @Override\r\n        public void setCatalog(String catalog) throws SQLException {\r\n            connection.setCatalog(catalog);\r\n        }\r\n\r\n        @Override\r\n        public void setClientInfo(String name, String value) throws SQLClientInfoException {\r\n            connection.setClientInfo(name, value);\r\n        }\r\n\r\n        @Override\r\n        public void setHoldability(int holdability) throws SQLException {\r\n            connection.setHoldability(holdability);\r\n        }\r\n\r\n        @Override\r\n        public void setReadOnly(boolean readOnly) throws SQLException {\r\n            connection.setReadOnly(readOnly);\r\n        }\r\n\r\n        @Override\r\n        public Savepoint setSavepoint() throws SQLException {\r\n            return connection.setSavepoint();\r\n        }\r\n\r\n        @Override\r\n        public Savepoint setSavepoint(String name) throws SQLException {\r\n            return connection.setSavepoint(name);\r\n        }\r\n\r\n        @Override\r\n        public void setTransactionIsolation(int level) throws SQLException {\r\n            connection.setTransactionIsolation(level);\r\n        }\r\n\r\n        @Override\r\n        public boolean isWrapperFor(Class<?> iface) throws SQLException {\r\n            return connection.isWrapperFor(iface);\r\n        }\r\n\r\n        @Override\r\n        public <T> T unwrap(Class<T> iface) throws SQLException {\r\n            return connection.unwrap(iface);\r\n        }\r\n\r\n        @Override\r\n        public void abort(Executor arg0) throws SQLException {\r\n            connection.abort(arg0);\r\n        }\r\n\r\n        @Override\r\n        public int getNetworkTimeout() throws SQLException {\r\n            return connection.getNetworkTimeout();\r\n        }\r\n\r\n        @Override\r\n        public String getSchema() throws SQLException {\r\n            return connection.getSchema();\r\n        }\r\n\r\n        @Override\r\n        public void releaseSavepoint(Savepoint arg0) throws SQLException {\r\n            connection.releaseSavepoint(arg0);\r\n        }\r\n\r\n        @Override\r\n        public void rollback(Savepoint arg0) throws SQLException {\r\n            connection.rollback(arg0);\r\n        }\r\n\r\n        @Override\r\n        public void setClientInfo(Properties arg0) throws SQLClientInfoException {\r\n            connection.setClientInfo(arg0);\r\n        }\r\n\r\n        @Override\r\n        public void setNetworkTimeout(Executor arg0, int arg1) throws SQLException {\r\n            connection.setNetworkTimeout(arg0, arg1);\r\n        }\r\n\r\n        @Override\r\n        public void setSchema(String arg0) throws SQLException {\r\n            connection.setSchema(arg0);\r\n        }\r\n\r\n        @Override\r\n        public void setTypeMap(Map<String, Class<?>> arg0) throws SQLException {\r\n            connection.setTypeMap(arg0);\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/mahhis/dao/database/ConnectionPool.java b/src/main/java/com/mahhis/dao/database/ConnectionPool.java
--- a/src/main/java/com/mahhis/dao/database/ConnectionPool.java	
+++ b/src/main/java/com/mahhis/dao/database/ConnectionPool.java	
@@ -105,7 +105,6 @@
             rs.close();
         } catch (SQLException e) {
             throw new ConnectionPoolException("rs didn't close ", e);
-
         }
         try {
             st.close();
